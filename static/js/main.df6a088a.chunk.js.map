{"version":3,"sources":["alert.png","progress1.jpg","progress2.png","initialSketch.png","sketch.png","final.png","dashboard.png","evaluation1.png","evaluation2.png","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","App","react_default","a","createElement","className","src","alert","initialSketch","sketch","progress2","final","autoplay","controls","loop","muted","playesInLine","type","dashboard","evaluation1","evaluation2","progress1","reportWebVitals","onPerfEntry","Function","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.df6a088a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/alert.dce2e120.png\";","module.exports = __webpack_public_path__ + \"static/media/progress1.0fd70c87.jpg\";","module.exports = __webpack_public_path__ + \"static/media/progress2.e6070e21.png\";","module.exports = __webpack_public_path__ + \"static/media/initialSketch.39276e3b.png\";","module.exports = __webpack_public_path__ + \"static/media/sketch.69097e75.png\";","module.exports = __webpack_public_path__ + \"static/media/final.bd194321.png\";","module.exports = __webpack_public_path__ + \"static/media/dashboard.afa66fa4.png\";","module.exports = __webpack_public_path__ + \"static/media/evaluation1.aa1df4a8.png\";","module.exports = __webpack_public_path__ + \"static/media/evaluation2.6cfb654f.png\";","import \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n// import { Navbar, Container } from \"react-bootstrap\";\r\nimport React, { PureComponent, useEffect, useState } from \"react\";\r\n// import { Route, Routes} from \"react-router-dom\";\r\n// import {\r\n//   AreaChart,\r\n//   Area,\r\n//   XAxis,\r\n//   YAxis,\r\n//   CartesianGrid,\r\n//   Tooltip,\r\n//   PieChart,\r\n//   Pie,\r\n//   Cell,\r\n//   ResponsiveContainer,\r\n// } from \"recharts\";\r\nimport axios from \"axios\";\r\nimport alert from \"./alert.png\";\r\nimport progress1 from \"./progress1.jpg\";\r\nimport progress2 from \"./progress2.png\";\r\nimport initialSketch from \"./initialSketch.png\";\r\nimport sketch from \"./sketch.png\";\r\nimport final from \"./final.png\";\r\nimport dashboard from \"./dashboard.png\";\r\nimport evaluation1 from \"./evaluation1.png\";\r\nimport evaluation2 from \"./evaluation2.png\";\r\n// import video1 from \"../public/videos/blushing.mp4\";\r\n// import DigitalPortfolio from \"./routes/DigitalPortfolio\";\r\n\r\nfunction App() {\r\n  // const [database, setdatabase] = useState([]);\r\n  // const [goodpoint, setgoodpoint] = useState(0);\r\n  // const [badpoint, setbadpoint] = useState(0);\r\n  // const goal = 100;\r\n\r\n  // const get_database = async () => {\r\n  //   const newdatabase = await axios\r\n  //     .get(\"/api/realtimedata\")\r\n  //     .then((result) => {\r\n  //       return result.data;\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       return err;\r\n  //     });\r\n  //   newdatabase.sort(function (a, b) {\r\n  //     return +(a.datetime > b.datetime) - 0.5;\r\n  //   });\r\n  //   return newdatabase;\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   const promise = get_database();\r\n  //   promise.then((data) => {\r\n  //     // console.log(data);\r\n  //     setdatabase(data);\r\n  //   });\r\n  // }, []);\r\n\r\n  // useEffect(()=>{\r\n  //   let goodSum = 0;\r\n  //   let badSum = 0;\r\n  //   const goodLst = database.map((element)=>{\r\n  //     return element['good'];\r\n  //   });\r\n  //   if(goodLst.length!=0){\r\n  //     goodSum = goodLst.filter(item => item === '1').length;\r\n  //   }\r\n  //   const badLst = database.map((element)=>{\r\n  //     return element['bad'];\r\n  //   });\r\n  //   if(goodLst.length!=0){\r\n  //     badSum = badLst.filter(item => item === '0').length;\r\n  //   }\r\n  //   setgoodpoint(goodSum);\r\n  //   setbadpoint(badSum);\r\n  // },[database])\r\n\r\n  // const data = goal<goodpoint?\r\n  //   [\r\n  //     { name: 'Intake', value: 100 },\r\n  //     { name: ' ', value: 0 },\r\n  //   ]\r\n  //   :[\r\n  //     { name: 'Intake', value: goodpoint },\r\n  //     { name: ' ', value: goal-goodpoint }\r\n  //   ];\r\n\r\n  // // pie chart\r\n  // const COLORS = [\"#0088FE\", \"white\"];\r\n  // const RADIAN = Math.PI / 180;\r\n  // const renderCustomizedLabel = ({\r\n  //   cx,\r\n  //   cy,\r\n  //   midAngle,\r\n  //   innerRadius,\r\n  //   outerRadius,\r\n  //   percent,\r\n  //   index,\r\n  // }) => {\r\n  //   const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n  //   const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n  //   const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n  //   return (\r\n  //     <text\r\n  //       x={x}\r\n  //       y={y}\r\n  //       fill=\"white\"\r\n  //       textAnchor={x > cx ? \"start\" : \"end\"}\r\n  //       dominantBaseline=\"central\"\r\n  //     >\r\n  //       {`${(percent * 100).toFixed(0)}%`}\r\n  //     </text>\r\n  //   );\r\n  // };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"container\">\r\n        <div className=\"title\">\r\n          <h1>\r\n            <strong>Here Comes the Water Intake Monitoring Robot</strong>\r\n          </h1>\r\n          <h1>. . .</h1>\r\n          <h1>\r\n            <strong>With Interactions!</strong>\r\n          </h1>\r\n        </div>\r\n        <div className=\"content\">\r\n          <img src={alert} />\r\n          <h2 className=\"sentence\">\r\n            <strong>Applications are Good... But Alerts Are Annoying.</strong>\r\n          </h2>\r\n        </div>\r\n        <div className=\"sentence\">\r\n          <h2>\r\n            <strong>We have come up with an idea that</strong>\r\n          </h2>\r\n          <h2>\r\n            <strong>\r\n              “Interaction with Robot itself” can induce users to\r\n              enjoy drinking water,\r\n            </strong>\r\n          </h2>\r\n          <h2>\r\n            <strong>Away from the annoying alarm.</strong>\r\n          </h2>\r\n        </div>\r\n        <div>\r\n        <div className=\"grid\">\r\n          <div>\r\n            <img src={initialSketch} className=\"initialSketch\" />\r\n            <h2 className=\"sentence\">\r\n              <strong>So Starting with Initial Sketches,</strong>\r\n            </h2>\r\n          </div>\r\n          <div>\r\n            <img src={sketch} className=\"sketch\" />\r\n            <h2 className=\"sentence\">\r\n              <strong>We developed it to Fixed Sketch.</strong>\r\n            </h2>\r\n          </div>\r\n        </div>\r\n        <div className=\"blank\">\r\n            <h2 className=\"aliceblue\">\r\n              ...\r\n            </h2>\r\n          </div>\r\n        <div>\r\n          <img src={progress2} className=\"progress2\" />\r\n          <h2 className=\"sentence\">\r\n            <strong>\r\n              After that, we assembled the necessary components according to the\r\n              blueprint, coded, and refined the design.\r\n            </strong>\r\n          </h2>\r\n        </div>\r\n        </div>\r\n        <div className=\"content\">\r\n          <img src={final} className=\"final\" />\r\n          <h2 className=\"sentence\">\r\n            <strong>Finally, we were able to make this fluffy robot.</strong>\r\n          </h2>\r\n        </div>\r\n        <div className=\"grid\">\r\n          <div>\r\n            <video autoplay controls loop muted playesInLine className=\"video\">\r\n              <source src=\"https://user-images.githubusercontent.com/57817039/208099021-79a89f60-82ff-4691-9cb7-651de3587b56.mp4\r\n\" type=\"video/mp4\" />\r\n            </video>\r\n          </div>\r\n          <div className=\"gridSentence\">\r\n            <h3>\r\n              <strong>It Blushes</strong>\r\n            </h3>\r\n            <h3>\r\n              <strong>and Wiggles</strong>\r\n            </h3>\r\n            <h3>\r\n              <strong>When You Drink Water,</strong>\r\n            </h3>\r\n          </div>\r\n          <div>\r\n            <video autoplay controls loop muted playesInLine className=\"video\">\r\n              <source src=\"https://user-images.githubusercontent.com/57817039/208101014-74c1d68a-2050-4f61-af6c-6332a669bcf7.mp4\r\n\" type=\"video/mp4\" />\r\n            </video>\r\n          </div>\r\n          <div className=\"gridSentence\">\r\n            <h3>\r\n              <strong>And It</strong>\r\n            </h3>\r\n            <h3>\r\n              <strong>Turns Blue</strong>\r\n            </h3>\r\n            <h3>\r\n              <strong>When You</strong>\r\n            </h3>\r\n            <h3>\r\n              <strong>Do Not</strong>\r\n            </h3>\r\n            <h3>\r\n              <strong>Drink Water</strong>\r\n            </h3>\r\n            <h3>\r\n              <strong>For a While.</strong>\r\n            </h3>\r\n          </div>\r\n        </div>\r\n        <div className=\"blank\">\r\n        <h2 className=\"aliceblue\">\r\n              ...\r\n            </h2>\r\n            <h2 className=\"aliceblue\">\r\n              ...\r\n            </h2>\r\n            <h2 className=\"aliceblue\">\r\n              ...\r\n            </h2>\r\n            <h2 className=\"aliceblue\">\r\n              ...\r\n            </h2>\r\n          </div>\r\n        <div className=\"content grid\">\r\n          <div>\r\n            <h2>\r\n              <strong>Also, it follows you when you are around.</strong>\r\n            </h2>\r\n          </div>\r\n          <div>\r\n            <video autoplay controls loop muted playesInLine className=\"video\">\r\n              <source src=\"https://user-images.githubusercontent.com/57817039/208101107-3a1fe3a2-4eb8-41f5-a460-7596722f8f09.mp4\" type=\"video/mp4\" />\r\n            </video>\r\n          </div>\r\n          <div>\r\n            <video autoplay controls loop muted playesInLine className=\"video\">\r\n              <source src=\"https://user-images.githubusercontent.com/57817039/208101085-738a1c85-7b32-4632-824a-5ee025850401.mp4\r\n\" type=\"video/mp4\" />\r\n            </video>\r\n          </div>\r\n        </div>\r\n        <div className=\"grid\">\r\n          <div>\r\n            <img src={dashboard} className=\"dashboard\" />\r\n          </div>\r\n          <div>\r\n            <h2>\r\n              <strong>\r\n                You can check your water drinking pattern in web dashboard,\r\n                also.\r\n              </strong>\r\n            </h2>\r\n          </div>\r\n        </div>\r\n        <div className=\"blank\">\r\n            <h2 className=\"aliceblue\">\r\n              ...\r\n            </h2>\r\n            <h2 className=\"aliceblue\">\r\n              ...\r\n            </h2>\r\n            <h2 className=\"aliceblue\">\r\n              ...\r\n            </h2>\r\n            <h2 className=\"aliceblue\">\r\n              ...\r\n            </h2>\r\n          </div>\r\n        <div className=\"sentence\">\r\n          <h2>\r\n            <strong></strong>\r\n          </h2>\r\n          <h2>\r\n            <strong>\r\n              For evaluation, we have let several users to do \"5-minutes\r\n              interaction\" with our robot.\r\n            </strong>\r\n          </h2>\r\n        </div>\r\n        <div className=\"grid\">\r\n          <div>\r\n            <img src={evaluation1} className=\"evaluation\" />\r\n          </div>\r\n          <div>\r\n            <h2>\r\n              <strong>\r\n                As a result, they felt warmth and less discomfort...\r\n              </strong>\r\n            </h2>\r\n          </div>\r\n        </div>\r\n        <div className=\"blank\">\r\n            <h2 className=\"aliceblue\">\r\n              ...\r\n            </h2>\r\n            <h2 className=\"aliceblue\">\r\n              ...\r\n            </h2>\r\n            <h2 className=\"aliceblue\">\r\n              ...\r\n            </h2>\r\n          </div>\r\n        <div className=\"content grid\">\r\n          <div>\r\n            <h2>\r\n              <strong>And various comments during interview.</strong>\r\n            </h2>\r\n          </div>\r\n          <div>\r\n            <img src={evaluation2} className=\"evaluation\" />\r\n          </div>\r\n        </div>\r\n        <div className=\"content\">\r\n        <div>\r\n          <h2>\r\n            <strong>\r\n            Hope You Enjoy Our Interactive Water Bottle!\r\n            </strong>\r\n          </h2>\r\n        </div>\r\n          <img src={progress1} className=\"progress1\" />\r\n        </div>\r\n      </div>\r\n      {/* <div className=\"bar\">\r\n        <Navbar bg=\"dark\" variant=\"dark\">\r\n          <Container>\r\n            <Navbar.Brand href=\"#home\">\r\n              <strong> Moolalah Dashboard </strong>\r\n            </Navbar.Brand>\r\n          </Container>\r\n        </Navbar>\r\n      </div>\r\n      <div className=\"main\">\r\n        <div className=\"graph\">\r\n          <h3>\r\n            <strong>Water Intake Amount</strong>\r\n          </h3>\r\n          <div className=\"graph-insideBox\">\r\n            <AreaChart\r\n              width={850}\r\n              height={520}\r\n              data={database}\r\n              margin={{\r\n                top: 100,\r\n                right: 30,\r\n                left: 20,\r\n                bottom: 5,\r\n              }}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"datetime\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Area\r\n                type=\"monotone\"\r\n                dataKey=\"weight\"\r\n                stroke=\"#8884d8\"\r\n                fill=\"#8884d8\"\r\n                activeDot={{ r: 8 }}\r\n              />\r\n            </AreaChart>\r\n          </div>\r\n        </div>\r\n        <div className=\"water\">\r\n        <h3>\r\n            <strong>Goal Achievement Rate</strong>\r\n          </h3>\r\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <PieChart width={1000} height={1000}>\r\n              <Pie\r\n                data={data}\r\n                cx=\"50%\"\r\n                cy=\"40%\"\r\n                labelLine={false}\r\n                label={renderCustomizedLabel}\r\n                outerRadius={80}\r\n                fill=\"#8884d8\"\r\n                dataKey=\"value\"\r\n              >\r\n                {data.map((entry, index) => (\r\n                  <Cell\r\n                    key={`cell-${index}`}\r\n                    fill={COLORS[index % COLORS.length]}\r\n                  />\r\n                ))}\r\n              </Pie>\r\n            </PieChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n        <div className=\"point\">\r\n          <h3>\r\n            <strong>POINT</strong>\r\n          </h3>\r\n          <div className=\"point-container\">\r\n            <div>\r\n              <h5 m-0>\r\n                <strong>Good</strong>\r\n              </h5>\r\n              <p className=\"point_icon\">😊</p>\r\n              <h2>\r\n                <strong>{goodpoint}</strong>\r\n              </h2>\r\n            </div>\r\n            <div>\r\n              <h5 m-0>\r\n                <strong>Bad</strong>\r\n              </h5>\r\n              <p className=\"point_icon\">😩</p>\r\n              <h2>\r\n                <strong>{badpoint}</strong>\r\n              </h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n      {/* <Routes>\r\n        <Route exact path=\"/DigitalPortfolio\">\r\n          <DigitalPortfolio />\r\n          </Route>\r\n      </Routes> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}